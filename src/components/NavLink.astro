---
const { linkName, to, currentParentPath } = Astro.props
---

<!-- Active link styling by comparing currentParentPath with `to` with slashes stripped out -->
<a
  href={to}
  data-text={linkName}
  class={currentParentPath === to.slice(1) ? 'active' : null}
>
  {linkName}
</a>

<style>
  a {
    display: inline-flex;
    align-items: center;
    flex-direction: column;
    font-size: inherit;
    text-decoration: none;
    font-weight: normal;
    color: var(--color-primary);
  }

  a::after {
    content: attr(data-text);
    height: 0;
    visibility: hidden;
    overflow: hidden;
    user-select: none;
    pointer-events: none;
    font-weight: bold;
  }

  .active {
    font-weight: bold;
    color: var(--color-primary);
    text-decoration: underline;
    text-decoration-color: var(--color-primary);
    text-decoration-thickness: 2px;
    text-underline-offset: 4px;
  }

  @media (width >= 40rem) {
    a {
      color: var(--color-taupe);
    }

    .active {
      font-weight: bold;
      color: inherit;
      text-decoration: underline;
      text-decoration-color: var(--color-taupe);
      text-decoration-thickness: 2px;
      text-underline-offset: 2px;
    }
  }
</style>
